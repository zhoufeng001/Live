package com.zf.live.dao.pojo;

import com.zf.live.dao.vo.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserpropsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public UserpropsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Long> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Long> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andPropstypeIsNull() {
            addCriterion("propstype is null");
            return (Criteria) this;
        }

        public Criteria andPropstypeIsNotNull() {
            addCriterion("propstype is not null");
            return (Criteria) this;
        }

        public Criteria andPropstypeEqualTo(Byte value) {
            addCriterion("propstype =", value, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeNotEqualTo(Byte value) {
            addCriterion("propstype <>", value, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeGreaterThan(Byte value) {
            addCriterion("propstype >", value, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("propstype >=", value, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeLessThan(Byte value) {
            addCriterion("propstype <", value, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeLessThanOrEqualTo(Byte value) {
            addCriterion("propstype <=", value, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeIn(List<Byte> values) {
            addCriterion("propstype in", values, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeNotIn(List<Byte> values) {
            addCriterion("propstype not in", values, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeBetween(Byte value1, Byte value2) {
            addCriterion("propstype between", value1, value2, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropstypeNotBetween(Byte value1, Byte value2) {
            addCriterion("propstype not between", value1, value2, "propstype");
            return (Criteria) this;
        }

        public Criteria andPropsnameIsNull() {
            addCriterion("propsname is null");
            return (Criteria) this;
        }

        public Criteria andPropsnameIsNotNull() {
            addCriterion("propsname is not null");
            return (Criteria) this;
        }

        public Criteria andPropsnameEqualTo(String value) {
            addCriterion("propsname =", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameNotEqualTo(String value) {
            addCriterion("propsname <>", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameGreaterThan(String value) {
            addCriterion("propsname >", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameGreaterThanOrEqualTo(String value) {
            addCriterion("propsname >=", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameLessThan(String value) {
            addCriterion("propsname <", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameLessThanOrEqualTo(String value) {
            addCriterion("propsname <=", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameLike(String value) {
            addCriterion("propsname like", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameNotLike(String value) {
            addCriterion("propsname not like", value, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameIn(List<String> values) {
            addCriterion("propsname in", values, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameNotIn(List<String> values) {
            addCriterion("propsname not in", values, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameBetween(String value1, String value2) {
            addCriterion("propsname between", value1, value2, "propsname");
            return (Criteria) this;
        }

        public Criteria andPropsnameNotBetween(String value1, String value2) {
            addCriterion("propsname not between", value1, value2, "propsname");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeIsNull() {
            addCriterion("expirationtime is null");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeIsNotNull() {
            addCriterion("expirationtime is not null");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeEqualTo(Date value) {
            addCriterion("expirationtime =", value, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeNotEqualTo(Date value) {
            addCriterion("expirationtime <>", value, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeGreaterThan(Date value) {
            addCriterion("expirationtime >", value, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("expirationtime >=", value, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeLessThan(Date value) {
            addCriterion("expirationtime <", value, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeLessThanOrEqualTo(Date value) {
            addCriterion("expirationtime <=", value, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeIn(List<Date> values) {
            addCriterion("expirationtime in", values, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeNotIn(List<Date> values) {
            addCriterion("expirationtime not in", values, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeBetween(Date value1, Date value2) {
            addCriterion("expirationtime between", value1, value2, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andExpirationtimeNotBetween(Date value1, Date value2) {
            addCriterion("expirationtime not between", value1, value2, "expirationtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createtime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createtime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createtime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createtime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createtime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createtime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userprops
     *
     * @mbggenerated do_not_delete_during_merge Mon Dec 15 17:32:50 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userprops
     *
     * @mbggenerated Mon Dec 15 17:32:50 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}